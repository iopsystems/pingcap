diff --git a/src/lua/internal/sysbench.histogram.lua b/src/lua/internal/sysbench.histogram.lua
index 82e1174..65be6f1 100644
--- a/src/lua/internal/sysbench.histogram.lua
+++ b/src/lua/internal/sysbench.histogram.lua
@@ -39,6 +39,8 @@ void sb_histogram_delete(sb_histogram_t *h);
 /* Update histogram with a given value. */
 void sb_histogram_update(sb_histogram_t *h, double value);
 
+double sb_histogram_get_pct_intermediate(sb_histogram_t *h, double percentile);
+double sb_histogram_get_pct_cumulative(sb_histogram_t *h, double percentile);
 /*
   Print a given histogram to stdout
 */
@@ -52,9 +54,25 @@ function histogram:update(value)
 end
 
 function histogram:print()
-   ffi.C.sb_histogram_print(self)
+  local min = self.get_pct_cumulative(0.0)
+  local max = self.get_pct_cumulative(100.0)
+  local p50 = self.get_pct_cumulative(50.0)
+  local p90 = self.get_pct_cumulative(90.0)
+  local p99 = self.get_pct_cumulative(99.0)
+  local p999 = self.get_pct_cumulative(99.9)
+  print(string.format("percentiles:%4.2f,%4.2f,%4.2f,%4.2f,%4.2f,%4.2f",
+                      min, p50, p90, p99, p999, max))
+ -- ffi.C.sb_histogram_print(self)
 end
 
+function histogram:get_pct_intermediate(percentile)
+    return ffi.C.sb_histogram_get_pct_intermediate(self, percentile)
+end
+
+function histogram:get_pct_cumulative(percentile)
+    return ffi.C.sb_histogram_get_pct_cumulative(self, percentile)
+end
+  
 local histogram_mt = {
    __index = histogram,
    __tostring = '<sb_histogram>'
diff --git a/src/lua/internal/sysbench.lua b/src/lua/internal/sysbench.lua
index 2611eba..1d5c5a8 100644
--- a/src/lua/internal/sysbench.lua
+++ b/src/lua/internal/sysbench.lua
y@@ -71,10 +71,12 @@ sysbench.hooks = {
 -- sysbench.hooks.report_intermediate = sysbench.report_csv
 function sysbench.report_csv(stat)
    local seconds = stat.time_interval
-   print(string.format("%.0f,%u,%4.2f," ..
+   local timestamp = os.time()
+   print(string.format("%u,%.0f,%u,%4.2f," ..
                           "%4.2f,%4.2f,%4.2f,%4.2f," ..
                           "%4.2f,%4.2f," ..
                           "%4.2f",
+                       timestamp,
                        stat.time_total,
                        stat.threads_running,
                        stat.events / seconds,
diff --git a/src/sb_timer.h b/src/sb_timer.h
index 43d0d14..79185c6 100644
--- a/src/sb_timer.h
+++ b/src/sb_timer.h
@@ -130,7 +130,7 @@ static inline uint64_t sb_timer_stop(sb_timer_t *t)
 
   SB_GETTIME(&t->time_end);
 
-  uint64_t elapsed = TIMESPEC_DIFF(t->time_end, t->time_start) + t->queue_time;
+  uint64_t elapsed = TIMESPEC_DIFF(t->time_end, t->time_start);
 
   t->events++;
   t->sum_time += elapsed;
@@ -154,7 +154,7 @@ static inline uint64_t sb_timer_value(sb_timer_t *t)
   struct timespec ts;
 
   SB_GETTIME(&ts);
-  return TIMESPEC_DIFF(ts, t->time_start) + t->queue_time;
+  return TIMESPEC_DIFF(ts, t->time_start);
 }
 
 /* Clone a timer */
diff --git a/src/sysbench.c b/src/sysbench.c
index fb83bef..7d3c9d5 100644
--- a/src/sysbench.c
+++ b/src/sysbench.c
@@ -1244,15 +1244,21 @@ static int run_test(sb_test_t *test)
 
   /* print test-specific stats */
   if (!sb_globals.error)
-  {
+  {    
     if (sb_globals.histogram)
     {
-      log_text(LOG_NOTICE, "Latency histogram (values are in milliseconds)");
-      sb_histogram_print(&sb_latency_histogram);
-      log_text(LOG_NOTICE, " ");
-    }
-
-    report_cumulative();
+      //log_text(LOG_NOTICE, "Latency histogram (values are in milliseconds)");
+      double min = sb_histogram_get_pct_cumulative(&sb_latency_histogram, 0.0);
+      double max = sb_histogram_get_pct_cumulative(&sb_latency_histogram, 100.0);
+      double p50 = sb_histogram_get_pct_cumulative(&sb_latency_histogram, 50.0);
+      double p90 = sb_histogram_get_pct_cumulative(&sb_latency_histogram, 90.0);
+      double p99 = sb_histogram_get_pct_cumulative(&sb_latency_histogram, 99.0);
+      double p999 = sb_histogram_get_pct_cumulative(&sb_latency_histogram, 99.9);
+      
+      //sb_histogram_print(&sb_latency_histogram);
+      log_text(LOG_NOTICE, "%.3f,%.3f,%.3f,%.3f,%.3f,%.3f", min, p50, p90, p99, p999, max);
+      report_cumulative();
+    }    
   }
 
   pthread_mutex_destroy(&sb_globals.exec_mutex);
